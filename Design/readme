Game
This is the meaty part of the code, our primary logic, the game!
It needs an instance of

Board
Game
Notice how Board already contains instances of Cell.
This also needs to contain the following
--> Ability and logic to use the classes we make and conduct a game!
--> Know when the game is over

So the following functions will be required:

A constructor to initialise the game with a snake and a board.
A function to return the snake.
A function to set the value of snake.
A function to return the board.
A function to set the value of board
A function to set the game to be over.
A function to check if the game is over.
A function to set the direction of snake's motion.
A function to return the direction of snake's motion.
A function to update the game according to snake's movement.
A function to keep track of the forthcoming cell.
After this we will also define a main function to actually play the game.




We need a class Game, which contains data members to take care of the snake and the board.
We need a set of fixed directions for movement, and a direction member to determine movement.
Along with a boolean to check for the game to be over!

We need methods to initialise and receive the values.
We need to ensure that the game is updated as per the user, i.e. actually calling the functions for moving the snake, getting the food etc.
One characteristic is that, even though direction of movement is somewhat characteristic to the snake, the position is actually attributed to the cell, which is a part of the board. Since we have the snake as well as access to current values here, and have also added direction members here, it seems right to and modular to maintain directions here.

A function to update the direction here itself.
